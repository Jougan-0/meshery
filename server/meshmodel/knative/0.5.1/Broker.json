{"kind":"Broker","apiVersion":"eventing.knative.dev/v1","displayName":"Broker","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"isNamespaced":true},"model":{"name":"knative","version":"0.5.1","displayName":"knative","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"","metadata":null},"metadata":{"source_uri":"https://mesosphere.github.io/charts/staging/knative-1.10.7.tgz"}},"schema":"{\n \"description\": \"Broker collects a pool of events that are consumable using Triggers. Brokers provide a well-known endpoint for event delivery that senders can use with minimal knowledge of the event routing strategy. Subscribers use Triggers to request delivery of events from a Broker's pool to a specific URL or Addressable endpoint.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"Spec defines the desired state of the Broker.\",\n   \"properties\": {\n    \"config\": {\n     \"description\": \"Config is a KReference to the configuration that specifies configuration options for this Broker. For example, this could be a pointer to a ConfigMap.\",\n     \"properties\": {\n      \"apiVersion\": {\n       \"description\": \"API version of the referent.\",\n       \"type\": \"string\"\n      },\n      \"kind\": {\n       \"description\": \"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\n       \"type\": \"string\"\n      },\n      \"namespace\": {\n       \"description\": \"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"delivery\": {\n     \"description\": \"Delivery contains the delivery spec for each trigger to this Broker. Each trigger delivery spec, if any, overrides this global delivery spec.\",\n     \"format\": \"textarea\",\n     \"properties\": {\n      \"backoffDelay\": {\n       \"description\": \"BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay*\\u003cnumberOfRetries\\u003e. For exponential policy, backoff delay is backoffDelay*2^\\u003cnumberOfRetries\\u003e.\",\n       \"type\": \"string\"\n      },\n      \"backoffPolicy\": {\n       \"description\": \"BackoffPolicy is the retry backoff policy (linear, exponential).\",\n       \"type\": \"string\"\n      },\n      \"deadLetterSink\": {\n       \"description\": \"DeadLetterSink is the sink receiving event that could not be sent to a destination.\",\n       \"properties\": {\n        \"ref\": {\n         \"description\": \"Ref points to an Addressable.\",\n         \"properties\": {\n          \"apiVersion\": {\n           \"description\": \"API version of the referent.\",\n           \"type\": \"string\"\n          },\n          \"kind\": {\n           \"description\": \"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\n           \"type\": \"string\"\n          },\n          \"name\": {\n           \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\n           \"type\": \"string\"\n          },\n          \"namespace\": {\n           \"description\": \"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"uri\": {\n         \"description\": \"URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"retry\": {\n       \"description\": \"Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.\",\n       \"format\": \"int32\",\n       \"type\": \"integer\"\n      }\n     },\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Broker\",\n \"type\": \"object\"\n}"}