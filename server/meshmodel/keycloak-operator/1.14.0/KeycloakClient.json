{"kind":"KeycloakClient","apiVersion":"v1.edp.epam.com/v1","displayName":"Keycloak Client","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"isNamespaced":true},"model":{"name":"keycloak-operator","version":"1.14.0","displayName":"keycloak-operator","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"","metadata":null},"metadata":{"source_uri":"https://epam.github.io/edp-helm-charts/stable/packages/keycloak-operator-1.19.0.tgz"}},"schema":"{\n \"description\": \"KeycloakClient is the Schema for the keycloak clients API.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"KeycloakClientSpec defines the desired state of KeycloakClient.\",\n   \"properties\": {\n    \"advancedProtocolMappers\": {\n     \"description\": \"AdvancedProtocolMappers is a flag to enable advanced protocol mappers.\",\n     \"type\": \"boolean\"\n    },\n    \"attributes\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"default\": {\n      \"post.logout.redirect.uris\": \"+\"\n     },\n     \"description\": \"Attributes is a map of client attributes.\",\n     \"nullable\": true,\n     \"type\": \"object\"\n    },\n    \"clientId\": {\n     \"description\": \"ClientId is a unique keycloak client ID referenced in URI and tokens.\",\n     \"type\": \"string\"\n    },\n    \"clientRoles\": {\n     \"description\": \"ClientRoles is a list of client roles names assigned to client.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"nullable\": true,\n     \"type\": \"array\"\n    },\n    \"defaultClientScopes\": {\n     \"description\": \"DefaultClientScopes is a list of default client scopes assigned to client.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"nullable\": true,\n     \"type\": \"array\"\n    },\n    \"directAccess\": {\n     \"description\": \"DirectAccess is a flag to set client as direct access.\",\n     \"type\": \"boolean\"\n    },\n    \"frontChannelLogout\": {\n     \"description\": \"FrontChannelLogout is a flag to enable front channel logout.\",\n     \"type\": \"boolean\"\n    },\n    \"protocol\": {\n     \"description\": \"Protocol is a client protocol.\",\n     \"nullable\": true,\n     \"type\": \"string\"\n    },\n    \"protocolMappers\": {\n     \"description\": \"ProtocolMappers is a list of protocol mappers assigned to client.\",\n     \"items\": {\n      \"properties\": {\n       \"config\": {\n        \"additionalProperties\": {\n         \"type\": \"string\"\n        },\n        \"description\": \"Config is a map of protocol mapper configuration.\",\n        \"nullable\": true,\n        \"type\": \"object\"\n       },\n       \"name\": {\n        \"description\": \"Name is a protocol mapper name.\",\n        \"type\": \"string\"\n       },\n       \"protocol\": {\n        \"description\": \"Protocol is a protocol name.\",\n        \"type\": \"string\"\n       },\n       \"protocolMapper\": {\n        \"description\": \"ProtocolMapper is a protocol mapper name.\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"nullable\": true,\n     \"type\": \"array\"\n    },\n    \"public\": {\n     \"description\": \"Public is a flag to set client as public.\",\n     \"type\": \"boolean\"\n    },\n    \"realmRef\": {\n     \"description\": \"RealmRef is reference to Realm custom resource.\",\n     \"properties\": {\n      \"kind\": {\n       \"description\": \"Kind specifies the kind of the Keycloak resource.\",\n       \"enum\": [\n        \"KeycloakRealm\",\n        \"ClusterKeycloakRealm\"\n       ],\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"Name specifies the name of the Keycloak resource.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"realmRoles\": {\n     \"description\": \"RealmRoles is a list of realm roles assigned to client.\",\n     \"items\": {\n      \"properties\": {\n       \"composite\": {\n        \"description\": \"Composite is a realm composite role name.\",\n        \"type\": \"string\"\n       },\n       \"name\": {\n        \"description\": \"Name is a realm role name.\",\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"composite\"\n      ],\n      \"type\": \"object\"\n     },\n     \"nullable\": true,\n     \"type\": \"array\"\n    },\n    \"reconciliationStrategy\": {\n     \"description\": \"ReconciliationStrategy is a strategy to reconcile client.\",\n     \"enum\": [\n      \"full\",\n      \"addOnly\"\n     ],\n     \"type\": \"string\"\n    },\n    \"redirectUris\": {\n     \"description\": \"RedirectUris is a list of valid URI pattern a browser can redirect to after a successful login. Simple wildcards are allowed such as 'https://example.com/*'. Relative path can be specified too, such as /my/relative/path/*. Relative paths are relative to the client root URL. If not specified, spec.webUrl + \\\"/*\\\" will be used.\",\n     \"example\": [\n      \"https://example.com/*\",\n      \"/my/relative/path/*\"\n     ],\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"nullable\": true,\n     \"type\": \"array\"\n    },\n    \"secret\": {\n     \"description\": \"Secret is kubernetes secret name where the client's secret will be stored. Secret should have the following format: $secretName:secretKey. If not specified, a client secret will be generated and stored in a secret with the name keycloak-client-{metadata.name}-secret. If keycloak client is public, secret property will be ignored.\",\n     \"example\": \"$keycloak-secret:client_secret\",\n     \"type\": \"string\"\n    },\n    \"serviceAccount\": {\n     \"description\": \"ServiceAccount is a service account configuration.\",\n     \"nullable\": true,\n     \"properties\": {\n      \"attributes\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Attributes is a map of service account attributes.\",\n       \"nullable\": true,\n       \"type\": \"object\"\n      },\n      \"clientRoles\": {\n       \"description\": \"ClientRoles is a list of client roles assigned to service account.\",\n       \"items\": {\n        \"properties\": {\n         \"clientId\": {\n          \"description\": \"ClientID is a client ID.\",\n          \"type\": \"string\"\n         },\n         \"roles\": {\n          \"description\": \"Roles is a list of client roles names assigned to service account.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"nullable\": true,\n          \"type\": \"array\"\n         }\n        },\n        \"required\": [\n         \"clientId\"\n        ],\n        \"type\": \"object\"\n       },\n       \"nullable\": true,\n       \"type\": \"array\"\n      },\n      \"enabled\": {\n       \"description\": \"Enabled is a flag to enable service account.\",\n       \"type\": \"boolean\"\n      },\n      \"realmRoles\": {\n       \"description\": \"RealmRoles is a list of realm roles assigned to service account.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"nullable\": true,\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"targetRealm\": {\n     \"description\": \"Deprecated: use RealmRef instead. TargetRealm is a realm name where client will be created. It has higher priority than RealmRef for backward compatibility. If both TargetRealm and RealmRef are specified, TargetRealm will be used for client creation.\",\n     \"type\": \"string\"\n    },\n    \"webUrl\": {\n     \"description\": \"WebUrl is a client web url.\",\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"clientId\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Keycloak Client\",\n \"type\": \"object\"\n}"}