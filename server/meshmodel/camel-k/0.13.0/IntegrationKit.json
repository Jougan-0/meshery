{"kind":"IntegrationKit","apiVersion":"camel.apache.org/v1","displayName":"Integration Kit","format":"JSON","metadata":{"isNamespaced":true},"model":{"name":"camel-k","version":"0.13.0","displayName":"camel-k","category":{"name":"","metadata":null},"metadata":{"source_uri":"https://apache.github.io/camel-k/charts/camel-k-2.1.0.tgz"}},"schema":"{\n \"description\": \"IntegrationKit defines a container image and additional configuration needed to run an `Integration`. An `IntegrationKit` is a generic image generally built from the requirements of an `Integration`, but agnostic to it, in order to be reused by any other `Integration` which has the same required set of capabilities. An `IntegrationKit` may be used for other kits as a base container layer, when the `incremental` build option is enabled.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"the desired configuration\",\n   \"properties\": {\n    \"configuration\": {\n     \"description\": \"Deprecated: Use camel trait (camel.properties) to manage properties Use mount trait (mount.configs) to manage configs Use mount trait (mount.resources) to manage resources Use mount trait (mount.volumes) to manage volumes configuration used by the kit\",\n     \"items\": {\n      \"description\": \"ConfigurationSpec represents a generic configuration specification.\",\n      \"properties\": {\n       \"type\": {\n        \"description\": \"represents the type of configuration, ie: property, configmap, secret, ...\",\n        \"type\": \"string\"\n       },\n       \"value\": {\n        \"description\": \"the value to assign to the configuration (syntax may vary depending on the `Type`)\",\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"type\",\n       \"value\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"dependencies\": {\n     \"description\": \"a list of Camel dependecies used by this kit\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"image\": {\n     \"description\": \"the container image as identified in the container registry\",\n     \"type\": \"string\"\n    },\n    \"profile\": {\n     \"description\": \"the profile which is expected by this kit\",\n     \"type\": \"string\"\n    },\n    \"repositories\": {\n     \"description\": \"Maven repositories that can be used by the kit\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"sources\": {\n     \"description\": \"the sources to add at build time\",\n     \"items\": {\n      \"description\": \"SourceSpec defines the configuration for one or more routes to be executed in a certain Camel DSL language.\",\n      \"properties\": {\n       \"compression\": {\n        \"description\": \"if the content is compressed (base64 encrypted)\",\n        \"type\": \"boolean\"\n       },\n       \"content\": {\n        \"description\": \"the source code (plain text)\",\n        \"type\": \"string\"\n       },\n       \"contentKey\": {\n        \"description\": \"the confimap key holding the source content\",\n        \"type\": \"string\"\n       },\n       \"contentRef\": {\n        \"description\": \"the confimap reference holding the source content\",\n        \"type\": \"string\"\n       },\n       \"contentType\": {\n        \"description\": \"the content type (tipically text or binary)\",\n        \"type\": \"string\"\n       },\n       \"from-kamelet\": {\n        \"description\": \"True if the spec is generated from a Kamelet\",\n        \"type\": \"boolean\"\n       },\n       \"interceptors\": {\n        \"description\": \"Interceptors are optional identifiers the org.apache.camel.k.RoutesLoader uses to pre/post process sources\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"language\": {\n        \"description\": \"specify which is the language (Camel DSL) used to interpret this source code\",\n        \"type\": \"string\"\n       },\n       \"loader\": {\n        \"description\": \"Loader is an optional id of the org.apache.camel.k.RoutesLoader that will interpret this source at runtime\",\n        \"type\": \"string\"\n       },\n       \"name\": {\n        \"description\": \"the name of the specification\",\n        \"type\": \"string\"\n       },\n       \"path\": {\n        \"description\": \"the path where the file is stored\",\n        \"type\": \"string\"\n       },\n       \"property-names\": {\n        \"description\": \"List of property names defined in the source (e.g. if type is \\\"template\\\")\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"rawContent\": {\n        \"description\": \"the source code (binary)\",\n        \"format\": \"byte\",\n        \"type\": \"string\"\n       },\n       \"type\": {\n        \"description\": \"Type defines the kind of source described by this object\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"traits\": {\n     \"description\": \"traits that the kit will execute\",\n     \"properties\": {\n      \"addons\": {\n       \"additionalProperties\": {\n        \"description\": \"AddonTrait represents the configuration of an addon trait.\",\n        \"format\": \"textarea\",\n        \"type\": \"string\"\n       },\n       \"description\": \"The collection of addon trait configurations\",\n       \"type\": \"object\"\n      },\n      \"builder\": {\n       \"description\": \"The builder trait is internally used to determine the best strategy to build and configure IntegrationKits.\",\n       \"properties\": {\n        \"configuration\": {\n         \"description\": \"Legacy trait configuration parameters. Deprecated: for backward compatibility.\",\n         \"format\": \"textarea\",\n         \"type\": \"string\"\n        },\n        \"enabled\": {\n         \"description\": \"Deprecated: no longer in use.\",\n         \"type\": \"boolean\"\n        },\n        \"incrementalImageBuild\": {\n         \"description\": \"Use the incremental image build option, to reuse existing containers (default `true`)\",\n         \"type\": \"boolean\"\n        },\n        \"limitCPU\": {\n         \"description\": \"When using `pod` strategy, the maximum amount of CPU required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.\",\n         \"type\": \"string\"\n        },\n        \"limitMemory\": {\n         \"description\": \"When using `pod` strategy, the maximum amount of memory required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.\",\n         \"type\": \"string\"\n        },\n        \"mavenProfiles\": {\n         \"description\": \"A list of references pointing to configmaps/secrets that contains a maven profile. The content of the maven profile is expected to be a text containing a valid maven profile starting with `\\u003cprofile\\u003e` and ending with `\\u003c/profile\\u003e` that will be integrated as an inline profile in the POM. Syntax: [configmap|secret]:name[/key], where name represents the resource name, key optionally represents the resource key to be filtered (default key value = profile.xml).\",\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"orderStrategy\": {\n         \"description\": \"The build order strategy to use, either `dependencies`, `fifo` or `sequential` (default sequential)\",\n         \"type\": \"string\"\n        },\n        \"properties\": {\n         \"description\": \"A list of properties to be provided to the build task\",\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"requestCPU\": {\n         \"description\": \"When using `pod` strategy, the minimum amount of CPU required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.\",\n         \"type\": \"string\"\n        },\n        \"requestMemory\": {\n         \"description\": \"When using `pod` strategy, the minimum amount of memory required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.\",\n         \"type\": \"string\"\n        },\n        \"strategy\": {\n         \"description\": \"The strategy to use, either `pod` or `routine` (default routine)\",\n         \"type\": \"string\"\n        },\n        \"tasks\": {\n         \"description\": \"A list of tasks to be executed (available only when using `pod` strategy) with format `\\u003cname\\u003e;\\u003ccontainer-image\\u003e;\\u003ccontainer-command\\u003e`.\",\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"tasksLimitCPU\": {\n         \"description\": \"A list of limit cpu configuration for the specific task with format `\\u003ctask-name\\u003e:\\u003climit-cpu-conf\\u003e`.\",\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"tasksLimitMemory\": {\n         \"description\": \"A list of limit memory configuration for the specific task with format `\\u003ctask-name\\u003e:\\u003climit-memory-conf\\u003e`.\",\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"tasksRequestCPU\": {\n         \"description\": \"A list of request cpu configuration for the specific task with format `\\u003ctask-name\\u003e:\\u003crequest-cpu-conf\\u003e`.\",\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"tasksRequestMemory\": {\n         \"description\": \"A list of request memory configuration for the specific task with format `\\u003ctask-name\\u003e:\\u003crequest-memory-conf\\u003e`.\",\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"verbose\": {\n         \"description\": \"Enable verbose logging on build components that support it (e.g. Kaniko build pod).\",\n         \"type\": \"boolean\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"camel\": {\n       \"description\": \"The Camel trait sets up Camel configuration.\",\n       \"properties\": {\n        \"configuration\": {\n         \"description\": \"Legacy trait configuration parameters. Deprecated: for backward compatibility.\",\n         \"format\": \"textarea\",\n         \"type\": \"string\"\n        },\n        \"enabled\": {\n         \"description\": \"Deprecated: no longer in use.\",\n         \"type\": \"boolean\"\n        },\n        \"properties\": {\n         \"description\": \"A list of properties to be provided to the Integration runtime\",\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"runtimeVersion\": {\n         \"description\": \"The camel-k-runtime version to use for the integration. It overrides the default version set in the Integration Platform.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"quarkus\": {\n       \"description\": \"The Quarkus trait configures the Quarkus runtime. It's enabled by default. NOTE: Compiling to a native executable, requires at least 4GiB of memory, so the Pod running the native build must have enough memory available.\",\n       \"properties\": {\n        \"buildMode\": {\n         \"description\": \"The Quarkus mode to run: either `jvm` or `native` (default `jvm`). In case both `jvm` and `native` are specified, two `IntegrationKit` resources are created, with the `native` kit having precedence over the `jvm` one once ready.\",\n         \"items\": {\n          \"description\": \"QuarkusMode is the type of Quarkus build packaging.\",\n          \"enum\": [\n           \"jvm\",\n           \"native\"\n          ],\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"configuration\": {\n         \"description\": \"Legacy trait configuration parameters. Deprecated: for backward compatibility.\",\n         \"format\": \"textarea\",\n         \"type\": \"string\"\n        },\n        \"enabled\": {\n         \"description\": \"Deprecated: no longer in use.\",\n         \"type\": \"boolean\"\n        },\n        \"nativeBaseImage\": {\n         \"description\": \"The base image to use when running a native build (default `quay.io/quarkus/quarkus-micro-image:2.0`)\",\n         \"type\": \"string\"\n        },\n        \"nativeBuilderImage\": {\n         \"description\": \"The image containing the tooling required for a native build (by default it will use the one provided in the runtime catalog)\",\n         \"type\": \"string\"\n        },\n        \"packageTypes\": {\n         \"description\": \"The Quarkus package types, `fast-jar` or `native` (default `fast-jar`). In case both `fast-jar` and `native` are specified, two `IntegrationKit` resources are created, with the native kit having precedence over the `fast-jar` one once ready. The order influences the resolution of the current kit for the integration. The kit corresponding to the first package type will be assigned to the integration in case no existing kit that matches the integration exists. Deprecated: use `build-mode` instead.\",\n         \"items\": {\n          \"description\": \"QuarkusPackageType is the type of Quarkus build packaging. Deprecated: use `QuarkusMode` instead.\",\n          \"enum\": [\n           \"fast-jar\",\n           \"native\"\n          ],\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"registry\": {\n       \"description\": \"The Registry trait sets up Maven to use the Image registry as a Maven repository.\",\n       \"properties\": {\n        \"configuration\": {\n         \"description\": \"Legacy trait configuration parameters. Deprecated: for backward compatibility.\",\n         \"format\": \"textarea\",\n         \"type\": \"string\"\n        },\n        \"enabled\": {\n         \"description\": \"Can be used to enable or disable a trait. All traits share this common property.\",\n         \"type\": \"boolean\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Integration Kit\",\n \"type\": \"object\"\n}"}